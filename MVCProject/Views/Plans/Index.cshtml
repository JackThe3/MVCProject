@model IEnumerable<MVCProject.Models.Plan>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-controller="Plans" asp-action="Index" method="get">

    <p>
        Title: <input type="text" name="searchString" value="@ViewBag.CurrentFilter" />
        <input type="submit" value="Filter" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th colspan="8">Posledné plány</th>
        </tr>
        <tr>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.Name).ToString(), "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter=ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.Owner).ToString(), "Index", new { sortOrder = ViewBag.OwnerSortParm, currentFilter=ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.Id).ToString(), "Index", new { sortOrder = ViewBag.IdSortParm, currentFilter=ViewBag.CurrentFilter })
            </th>
            <th>

                @Html.ActionLink(Html.DisplayNameFor(model => model.CreatedAt).ToString(), "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter=ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.UpdatedAt).ToString(), "Index", new { sortOrder = ViewBag.DateUpdatedSortParm, currentFilter=ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.Status).ToString(), "Index", new { sortOrder = ViewBag.StatusSortParm, currentFilter=ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.UpdatedBy).ToString(), "Index", new { sortOrder = ViewBag.UpdatedBySortParm, currentFilter=ViewBag.CurrentFilter })
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Owner)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdatedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdatedBy)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
